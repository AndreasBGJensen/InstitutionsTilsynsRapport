{
  "version": 3,
  "sources": [
    "comtainer/Costumer/LogIn.js",
    "comtainer/Costumer/Register.js",
    "comtainer/Costumer/SearchInstitution.js",
    "stores/InstitutionsStore.js",
    "comtainer/Costumer/InstitutionView.js",
    "comtainer/LandingPage.js",
    "comtainer/Utility/NavBar.js",
    "comtainer/Admin/AdminStore.js",
    "comtainer/Admin/Administration.js",
    "App.js",
    "serviceWorker.js",
    "index.js"
  ],
  "names": [
    "LogIn",
    "href",
    "React",
    "Component",
    "Register",
    "state",
    "user",
    "name",
    "email",
    "username",
    "userError",
    "brugere",
    "onInputChange",
    "event",
    "field",
    "target",
    "value",
    "setState",
    "console",
    "log",
    "onSubmit",
    "evt",
    "fieldError",
    "validate",
    "preventDefault",
    "Object",
    "keys",
    "length",
    "concat",
    "errors",
    "this",
    "placeholder",
    "onChange",
    "style",
    "color",
    "type",
    "baseUrl",
    "SearchInstitution",
    "props",
    "adresses",
    "fiels",
    "searchError",
    "fields",
    "vejnavn",
    "postNr",
    "fetch",
    "method",
    "body",
    "JSON",
    "stringify",
    "headers",
    "then",
    "response",
    "text",
    "token",
    "adress",
    "zipcode",
    "to",
    "pathname",
    "states",
    "LOADING",
    "DONE",
    "FAILED",
    "InstitutionsStore",
    "vuggestuer",
    "fetchItem",
    "json",
    "test",
    "catch",
    "error",
    "decorate",
    "observable",
    "institution",
    "List",
    "observer",
    "list",
    "map",
    "item",
    "key",
    "ListItem",
    "navn",
    "indstsers",
    "tilsynsPath",
    "indsats",
    "j",
    "link",
    "venteliste",
    "InstitutionView",
    "loading",
    "location",
    "LandingPage",
    "Button",
    "NavBar",
    "Navbar",
    "bg",
    "expand",
    "Brand",
    "Toggle",
    "aria-controls",
    "Collapse",
    "id",
    "Nav",
    "className",
    "Link",
    "status",
    "FETCHING",
    "FAILED_TO_FETCH",
    "FETCHING_DONE",
    "FETCHING_IDLE",
    "AdminStore",
    "axios",
    "post",
    "localStorage",
    "getItem",
    "res",
    "adminStore",
    "Administration",
    "buttonClickEvent",
    "doUpdate",
    "process",
    "neterror",
    "document",
    "getElementById",
    "display",
    "App",
    "Container",
    "exact",
    "path",
    "component",
    "institutionView",
    "Boolean",
    "window",
    "hostname",
    "match",
    "ReactDOM",
    "render",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "file": "static/js/main.c21cea6c.chunk.js",
  "sourcesContent": [
    "import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'development' ?  \"http://localhost:8080/\":\"\"; //Check if dev\r\n\r\n\r\n\r\n\r\nexport class LogIn extends React.Component{\r\n\r\n    /*constructor() {\r\n        super();\r\n        //Loading data when it when the store is initialized.\r\n        this.fetchItem();\r\n    }\r\n\r\n    fetchItem(){\r\n        fetch(baseUrl + \"rest/campusnet/login\")\r\n            .then(()=> {\r\n                //console.log(response)\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n\r\n            });\r\n    }*/\r\n\r\n    render() {\r\n\r\n        return <a href={baseUrl+\"rest/campusnet/login\"}>login med campusnet</a>\r\n    }\r\n\r\n    /*\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username:'',\r\n            password:''};\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({username:event.target.value});\r\n        console.log('Handle change' +this.state.username);\r\n    };\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({password:event.target.value});\r\n        console.log('Handle change' +this.state.password);\r\n    };\r\n\r\n\r\n    onSubmit=(evt)=>{\r\n        const name =this.state.username;\r\n        const password = this.state.password;\r\n        this.setState({username:name})\r\n        this.setState({password:password})\r\n        tokenStore.logindata.username=this.state.username;\r\n        tokenStore.logindata.password=this.state.password;\r\n        tokenStore.doLogin();\r\n        evt.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n          <div>\r\n              <h1>Login</h1>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input\r\n                        placeholder=\"Username\"\r\n                        value={this.state.username}\r\n                        onChange={this.handleUsernameChange}\r\n                    />\r\n                    <input\r\n                        placeholder=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handlePasswordChange}\r\n                    />\r\n                    <input type=\"submit\"/>\r\n                </form>\r\n\r\n          </div>\r\n\r\n        );\r\n    }*/\r\n}\r\n\r\nexport default LogIn",
    "import React from 'react'\r\n\r\n\r\nclass Register extends React.Component {\r\n\r\n    state = {\r\n        user: {\r\n            name: '',\r\n            email: '',\r\n            username: ''\r\n        },\r\n        userError: {},\r\n        brugere:[],\r\n    };\r\n\r\n\r\n\r\n    onInputChange = (event) => {\r\n\r\n        const field = this.state.user;\r\n        field[event.target.name] = event.target.value;\r\n        this.setState({user: field});\r\n        console.log('Handle change' +event.target.name);\r\n    };\r\n\r\n\r\n    onSubmit=(evt)=>{\r\n        const brugere = [...this.state.brugere];\r\n       const field = this.state.user;\r\n       const fieldError = this.validate(field);\r\n       this.setState({userError:fieldError});\r\n        evt.preventDefault();\r\n\r\n        if(Object.keys(fieldError).length) return;\r\n\r\n\r\n       this.setState({\r\n           brugere:brugere.concat(field),\r\n           user :{\r\n               name:field.name,\r\n               email:field.email,\r\n               username:field.username\r\n           }\r\n       });\r\n\r\n\r\n        console.log(this.state.user)\r\n\r\n    };\r\n\r\n    validate=(user)=>{\r\n        const errors={};\r\n        if(!user.name) errors.name = \"Username required\";\r\n        if(!user.email) errors.email =\"Email required\";\r\n        if(!user.username) errors.username =\"Username required\";\r\n        return errors;\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input\r\n                        name=\"username\"\r\n                        placeholder=\"username\"\r\n                        value={this.state.user.username}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n\r\n                    <span style={{color:'red'}}>{this.state.userError.username}</span>\r\n                    <br/>\r\n\r\n                    <input\r\n                        name=\"email\"\r\n                        placeholder=\"email\"\r\n                        type='email'\r\n                        value={this.state.user.email}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n\r\n                    <span style={{color:'red'}}>{this.state.userError.email}</span>\r\n                    <br/>\r\n\r\n                    <input\r\n                        placeholder=\"name\"\r\n                        name=\"name\"\r\n                        type='text'\r\n                        value={this.state.user.name}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n                    <span style={{color:'red'}}>{this.state.userError.name}</span>\r\n                    <br/>\r\n                    <input type=\"submit\"/>\r\n                </form>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n",
    "import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Link} from \"react-router-dom\"\r\nconst baseUrl = process.env.NODE_ENV === 'development' ?  \"http://localhost:8080/\":\"\"; //Check if dev\r\n\r\nconst status = {FETCHING:\"Loading\", FAILED_TO_FETCH:\"Logout\", FETCHING_DONE:\"Done Loading\"};\r\n\r\nconst defaultSearch = [];\r\n\r\nclass SearchInstitution extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fiels : {\r\n                vejnavn:'',\r\n                postNr:''},\r\n\r\n            searchError: {},\r\n            adresses:[],\r\n        };\r\n    }\r\n\r\n\r\n\r\n    onSubmit=(evt)=>{\r\n\r\n        const adresses = [...this.state.adresses];\r\n        const field = this.state.fiels;\r\n        const fieldError = this.validate(field);\r\n        this.setState({searchError:fieldError});\r\n        evt.preventDefault();\r\n\r\n        if(Object.keys(fieldError).length) return;\r\n\r\n//Here I set the state for the input.\r\n        this.setState({\r\n            fields:adresses.concat(field),\r\n            fiels :{\r\n                vejnavn:field.vejnavn,\r\n                postNr:field.postNr,\r\n\r\n            }\r\n        });\r\n  console.log(this.state.fiels)\r\n\r\n\r\n\r\n        fetch(baseUrl + \"rest/institution\",{\r\n\r\n            method:\"GET\",\r\n            body:JSON.stringify(this.fiels),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n\r\n        })\r\n            .then(\r\n                (response)=> {\r\n                    response.text().then(\r\n                        (token)=> {\r\n                            console.log(\"Got Token: \" + token)\r\n\r\n\r\n                        })\r\n\r\n                })\r\n\r\n    }\r\n//Validates if there is an input\r\n    validate=(fiels)=>{\r\n        const errors={};\r\n        if(!fiels.adress) errors.adress = \"Adress required\";\r\n        if(!fiels.zipcode) errors.zipcode =\"Zipcode required\";\r\n\r\n        return errors;\r\n\r\n    };\r\n\r\n    //This function updates every time a key have been stroke\r\n    onInputChange = (event) => {\r\n\r\n        const field = this.state.fiels;\r\n        field[event.target.name] = event.target.value;\r\n        this.setState({user: field});\r\n        console.log('Handle change' +event.target.name);\r\n        console.log('Handle change' +this.state.fiels.vejnavn);\r\n        console.log('Handle change' +this.state.fiels.postNr);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input\r\n                        name=\"vejnavn\"\r\n                        placeholder=\"Adresse\"\r\n                        value={this.state.vejnavn}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n                    <span style={{color:'red'}}>{this.state.searchError.adress}</span>\r\n                    <br/>\r\n                    <input\r\n                        name=\"postNr\"\r\n                        placeholder=\"post nr\"\r\n                        value={this.state.postNr}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n                    <span style={{color:'red'}}>{this.state.searchError.zipcode}</span>\r\n                    <br/>\r\n\r\n\r\n                    <Link to ={{//Linking to search results\r\n                        pathname: \"/searchResults\",\r\n                        state:{\r\n                            name: \"Hello\"\r\n                        }\r\n\r\n                    }} >\r\n                        <input type=\"submit\"/>\r\n                    </Link>\r\n                </form>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\nexport default SearchInstitution",
    "\r\nimport {decorate, observable} from \"mobx\";\r\nconst baseUrl = process.env.NODE_ENV === 'development' ?  \"http://localhost:8080/\":\"\"; //Check if dev\r\n\r\nconst states = {LOADING:\"LOAD\", DONE:\"DONE\", FAILED:\"FAILED\"}\r\n\r\n\r\nexport default class InstitutionsStore{\r\nstate = states.DONE;\r\n\r\n    vuggestuer = [];\r\n\r\n\r\n\r\n    constructor() {\r\n        //Loading data when it when the store is initialized.\r\n        this.fetchItem();\r\n    }\r\n\r\n\r\n//The fetchcall\r\n    fetchItem (){\r\n\r\n        this.state = states.LOADING;\r\n        fetch(baseUrl + \"rest/institution/all\")\r\n            .then((response)=> {\r\n                console.log(response);\r\n                response.json().then((json)=> {\r\n                    this.test = json;\r\n                    console.log(this.test)\r\n                    this.vuggestuer = json;\r\n                    this.state = states.DONE;\r\n                })\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n\r\n                this.state = states.FAILED;\r\n            });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ndecorate(InstitutionsStore,{\r\n    vuggestuer:observable,\r\n\r\n});\r\n\r\nexport const institution = new InstitutionsStore();",
    "import React from 'react'\r\nimport {institution} from '../../stores/InstitutionsStore'\r\nimport {observer} from \"mobx-react\";\r\n\r\n\r\n//Adding itmes to the list.\r\nconst List = observer(({ list }) => (\r\n    <ul>\r\n        {list.map((item,key) => (\r\n            <ListItem key={key} item={item} />\r\n        ))}\r\n    </ul>\r\n));\r\n\r\n//Designing the table\r\nconst ListItem = observer(({ item }) => (\r\n   <div>\r\n    <td>\r\n    <tr>\r\n        <div>{item.navn}</div>\r\n    </tr>\r\n   </td>\r\n\r\n\r\n       <td>\r\n           <tr>\r\n               <div>\r\n                   {\r\n                   (typeof(item.indstsers)==\"object\"?\r\n                       <div>\r\n                           {\r\n                               item.tilsynsPath.map((indsats,j)=>(\r\n                                   <div>\r\n\r\n                                           <a href={item.link[j]}>{item.tilsynsPath[j]}</a>\r\n\r\n\r\n                                       )}\r\n\r\n\r\n                                   </div>\r\n                               ))\r\n\r\n                           }\r\n\r\n                       </div>\r\n                           :\r\n                       null)\r\n                   }\r\n\r\n               </div>\r\n           </tr>\r\n       </td>\r\n\r\n\r\n\r\n       <td>\r\n           <tr>\r\n               <div> venteliste {item.venteliste}</div>\r\n           </tr>\r\n       </td>\r\n   </div>\r\n\r\n\r\n));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass InstitutionView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n            this.state= {\r\n                user: '',\r\n                loading: ''\r\n            }\r\n    console.log(props.location.state)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        //debugger\r\n        return(\r\n        <div>\r\n\r\n            <ul>\r\n                <p>{institution.state}</p>\r\n                <List list={institution.vuggestuer}/>\r\n                <br/>\r\n            </ul>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default observer(InstitutionView)",
    "import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nfunction LandingPage(){\r\n\r\n    return(\r\n        <div>\r\n            <h1>This is the landingPage</h1>\r\n\r\n            <Link to ={{//Linking to search results\r\n                pathname: \"/searchResults\",\r\n\r\n            }} >\r\n                <Button> Se Tilsyn </Button>\r\n            </Link>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default LandingPage",
    "import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\n\r\nclass NavBar extends React.Component {\r\n\r\n\r\n    render(){\r\n        return (\r\n        <div>\r\n            <Navbar bg=\"light\" expand=\"lg\" >\r\n                <Navbar.Brand href={\"#/\"}>Tilsyn.dk</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                        <Nav.Link href=\"https://www.kk.dk/indhold/s%C3%B8g-og-skriv-dit-barn-op-til-vuggestue-og-dagpleje\">Opskrivning til vuggestue</Nav.Link>\r\n\r\n                        <Nav.Link href=\"#login\">Log Ind</Nav.Link>\r\n                        <Nav.Link href=\"#admin\">Admin</Nav.Link>\r\n\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default NavBar",
    "\r\nimport {decorate, observable} from \"mobx\";\r\nimport axios from \"axios\";\r\nimport {institution} from \"../../stores/InstitutionsStore\";\r\nconst baseUrl = process.env.NODE_ENV === 'development' ?  \"http://localhost:8080/\":\"\"; //Check if dev\r\n\r\nconst status = {FETCHING:\"Loading\", FAILED_TO_FETCH:\"failed\", FETCHING_DONE:\"Done Loading\",FETCHING_IDLE:\"Idle\"};\r\n\r\n\r\nclass AdminStore{\r\n    state = status.FETCHING_IDLE;\r\n    vejnavn = \"\";\r\n    postNr = \"\";\r\n    response = \"\";\r\n\r\ndoUpdate(){\r\n    this.state = status.FETCHING\r\n    axios.post(baseUrl + \"rest/institution/update\", {\r\n\r\n    vejnavn: this.vejnavn,\r\n    postNr: this.postNr\r\n\r\n    }, {\r\n        headers: {\r\n            'authorization': localStorage.getItem(\"jwt-token\")\r\n        }\r\n    })\r\n    .then(res => {\r\n\r\n        console.log(res)\r\n        this.response=JSON.stringify(res);\r\n        this.state = status.FETCHING_DONE;\r\n        institution.fetchItem();\r\n\r\n    })\r\n        .catch(error => {\r\n\r\n            this.state = status.FAILED_TO_FETCH;\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ndecorate(AdminStore,{\r\n    state:observable,\r\n    vejnavn:observable,\r\n    postNr:observable,\r\n    response:observable\r\n\r\n\r\n});\r\n\r\nexport const adminStore = new AdminStore();",
    "import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Link} from \"react-router-dom\"\r\nimport axios from 'axios';\r\nimport {institution} from \"../../stores/InstitutionsStore\";\r\nimport {adminStore} from './AdminStore'\r\nimport {observer} from \"mobx-react\";\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'development' ?  \"http://localhost:8080/\":\"\"; //Check if dev\r\n\r\nconst status = {FETCHING:\"Loading\", FAILED_TO_FETCH:\"failed\", FETCHING_DONE:\"Done Loading\"};\r\n\r\n\r\nclass Administration extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fiels : {\r\n                vejnavn:'',\r\n                postNr:''},\r\n\r\n            searchError: {},\r\n            adresses:[],\r\n            process: status.FETCHING_DONE,\r\n            response: \"\",\r\n            neterror:\"\"\r\n        };\r\n\r\n    }\r\n\r\nbuttonClickEvent(){\r\n        const button = document.getElementById(\"submitButton\");\r\n        button.style.display = false;\r\n}\r\n\r\n    onSubmit=(evt)=> {\r\n        this.buttonClickEvent();\r\nadminStore.response = \"\";\r\n        console.log(\"ON SUBMIT: \" + this.state.fiels)\r\n        const adresses = [...this.state.adresses];\r\n        const field = this.state.fiels;\r\n        const fieldError = this.validate(field);\r\n        this.setState({searchError: fieldError});\r\n        evt.preventDefault();\r\n\r\n        if (Object.keys(fieldError).length) return;\r\n\r\n//Here I set the state for the input.\r\n        this.setState({\r\n            fields: adresses.concat(field),\r\n            fiels: {\r\n                vejnavn: field.vejnavn,\r\n                postNr: field.postNr,\r\n\r\n            }\r\n        });\r\n        adminStore.vejnavn = this.state.fiels.vejnavn;\r\n        adminStore.postNr = this.state.fiels.postNr;\r\n        adminStore.doUpdate();\r\n        console.log(this.state.fiels)\r\n\r\n\r\n    }\r\n\r\n\r\n//Validates if there is an input\r\n    validate=(fiels)=>{\r\n        const errors={};\r\n        if(!fiels.vejnavn) errors.adress = \"vejnavn required\";\r\n        if(!fiels.postNr) errors.zipcode =\"post nr required\";\r\n\r\n        return errors;\r\n\r\n    };\r\n\r\n    //This function updates every time a key have been stroke\r\n    onInputChange = (event) => {\r\n\r\n        const field = this.state.fiels;\r\n        field[event.target.name] = event.target.value;\r\n        this.setState({user: field});\r\n        console.log('Handle change' +event.target.name);\r\n        console.log('Handle change' +this.state.fiels.vejnavn);\r\n        console.log('Handle change' +this.state.fiels.postNr);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n   render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input\r\n                        name=\"vejnavn\"\r\n                        placeholder=\"Adresse\"\r\n                        value={this.state.vejnavn}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n                    <span style={{color:'red'}}>{this.state.searchError.vejnavn}</span>\r\n                    <br/>\r\n                    <input\r\n                        name=\"postNr\"\r\n                        placeholder=\"post nr\"\r\n                        value={this.state.postNr}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n                    <span style={{color:'red'}}>{this.state.searchError.postNr}</span>\r\n                    <br/>\r\n\r\n\r\n\r\n                        <input id=\"submitButton\" type=\"submit\"/>\r\n\r\n                </form>\r\n\r\n                <p>{adminStore.state}</p>\r\n\r\n                <br/>\r\n                <h1>{adminStore.response}</h1>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default observer(Administration)",
    "import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport {observer} from \"mobx-react\";\r\nimport LogIn from \"./comtainer/Costumer/LogIn\";\r\nimport Register from \"./comtainer/Costumer/Register\"\r\nimport {HashRouter as Router, Link, Route} from \"react-router-dom\";\r\nimport SearchInstitution from \"./comtainer/Costumer/SearchInstitution\"\r\n\r\nimport {Switch} from \"react-router-dom\"\r\nimport Container from \"react-bootstrap/Container\";\r\nimport institutionView from \"./comtainer/Costumer/InstitutionView\"\r\nimport LandingPage from \"./comtainer/LandingPage\"\r\nimport Navbar from \"./comtainer/Utility/NavBar\";\r\nimport Administration from \"./comtainer/Admin/Administration\";\r\n\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n\r\nrender()\r\n    {\r\n        return (\r\n\r\n\r\n\r\n\r\n            <Container>\r\n                <Navbar/>\r\n\r\n\r\n\r\n\r\n\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path={\"/\"} component={LandingPage}/>\r\n                        <Route path={\"/register\"} component={Register}/>\r\n                        <Route path={\"/login\"} component={LogIn}/>\r\n                        <Route path={\"/search\"} component={SearchInstitution}/>\r\n                        <Route path={\"/searchResults\"} component={institutionView}/>\r\n                        <Route path={\"/admin\"} component={Administration}/>\r\n                    </Switch>\r\n                </Router>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default observer(App);\r\n",
    "// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n",
    "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"
  ],
  "sourceRoot": ""
}