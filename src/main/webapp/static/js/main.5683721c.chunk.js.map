{"version":3,"sources":["comtainer/Costumer/LogIn.js","comtainer/Costumer/Register.js","comtainer/Costumer/SearchInstitution.js","stores/TokenStore.js","stores/InstitutionsStore.js","comtainer/Costumer/InstitutionView.js","comtainer/LandingPage.js","comtainer/Utility/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["LogIn","href","React","Component","Register","state","user","name","email","username","userError","brugere","onInputChange","event","field","target","value","setState","console","log","onSubmit","evt","fieldError","validate","preventDefault","Object","keys","length","concat","errors","this","placeholder","onChange","style","color","type","SearchInstitution","props","adresses","fiels","searchError","fields","adress","zipcode","to","pathname","Loginstates","LOGGING_IN","LOGGEDOUT","LOGGED_IN","TokenStore","token","logindata","password","localStorage","getItem","fetch","method","body","JSON","stringify","headers","then","response","text","setItem","catch","decorate","observable","states","LOADING","DONE","FAILED","InstitutionsStore","vuggestuer","fetchItem","Authorization","json","test","error","institution","List","list","map","item","key","ListItem","navn","indstsers","tilsynsPath","indsats","j","link","venteliste","InstitutionView","loading","location","LandingPage","Button","NavBar","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","App","Container","exact","path","component","institutionView","observer","Boolean","window","hostname","match","url","results","RegExp","exec","decodeURIComponent","replace","getParameterByName","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5683721c.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'development' ?  \"http://localhost:8080/\":\"\"; //Check if dev\r\n\r\n\r\n\r\n\r\nexport class LogIn extends React.Component{\r\n\r\n    /*constructor() {\r\n        super();\r\n        //Loading data when it when the store is initialized.\r\n        this.fetchItem();\r\n    }\r\n\r\n    fetchItem(){\r\n        fetch(baseUrl + \"rest/campusnet/login\")\r\n            .then(()=> {\r\n                //console.log(response)\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n\r\n            });\r\n    }*/\r\n\r\n    render() {\r\n\r\n        return <a href={baseUrl+\"rest/campusnet/login\"}>login med campusnet</a>\r\n    }\r\n\r\n    /*\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username:'',\r\n            password:''};\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({username:event.target.value});\r\n        console.log('Handle change' +this.state.username);\r\n    };\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({password:event.target.value});\r\n        console.log('Handle change' +this.state.password);\r\n    };\r\n\r\n\r\n    onSubmit=(evt)=>{\r\n        const name =this.state.username;\r\n        const password = this.state.password;\r\n        this.setState({username:name})\r\n        this.setState({password:password})\r\n        tokenStore.logindata.username=this.state.username;\r\n        tokenStore.logindata.password=this.state.password;\r\n        tokenStore.doLogin();\r\n        evt.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n          <div>\r\n              <h1>Login</h1>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input\r\n                        placeholder=\"Username\"\r\n                        value={this.state.username}\r\n                        onChange={this.handleUsernameChange}\r\n                    />\r\n                    <input\r\n                        placeholder=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handlePasswordChange}\r\n                    />\r\n                    <input type=\"submit\"/>\r\n                </form>\r\n\r\n          </div>\r\n\r\n        );\r\n    }*/\r\n}\r\n\r\nexport default LogIn","import React from 'react'\r\n\r\n\r\nclass Register extends React.Component {\r\n\r\n    state = {\r\n        user: {\r\n            name: '',\r\n            email: '',\r\n            username: ''\r\n        },\r\n        userError: {},\r\n        brugere:[],\r\n    };\r\n\r\n\r\n\r\n    onInputChange = (event) => {\r\n\r\n        const field = this.state.user;\r\n        field[event.target.name] = event.target.value;\r\n        this.setState({user: field});\r\n        console.log('Handle change' +event.target.name);\r\n    };\r\n\r\n\r\n    onSubmit=(evt)=>{\r\n        const brugere = [...this.state.brugere];\r\n       const field = this.state.user;\r\n       const fieldError = this.validate(field);\r\n       this.setState({userError:fieldError});\r\n        evt.preventDefault();\r\n\r\n        if(Object.keys(fieldError).length) return;\r\n\r\n\r\n       this.setState({\r\n           brugere:brugere.concat(field),\r\n           user :{\r\n               name:field.name,\r\n               email:field.email,\r\n               username:field.username\r\n           }\r\n       });\r\n\r\n\r\n        console.log(this.state.user)\r\n\r\n    };\r\n\r\n    validate=(user)=>{\r\n        const errors={};\r\n        if(!user.name) errors.name = \"Username required\";\r\n        if(!user.email) errors.email =\"Email required\";\r\n        if(!user.username) errors.username =\"Username required\";\r\n        return errors;\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input\r\n                        name=\"username\"\r\n                        placeholder=\"username\"\r\n                        value={this.state.user.username}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n\r\n                    <span style={{color:'red'}}>{this.state.userError.username}</span>\r\n                    <br/>\r\n\r\n                    <input\r\n                        name=\"email\"\r\n                        placeholder=\"email\"\r\n                        type='email'\r\n                        value={this.state.user.email}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n\r\n                    <span style={{color:'red'}}>{this.state.userError.email}</span>\r\n                    <br/>\r\n\r\n                    <input\r\n                        placeholder=\"name\"\r\n                        name=\"name\"\r\n                        type='text'\r\n                        value={this.state.user.name}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n                    <span style={{color:'red'}}>{this.state.userError.name}</span>\r\n                    <br/>\r\n                    <input type=\"submit\"/>\r\n                </form>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass SearchInstitution extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fiels : {\r\n                adress:'',\r\n                zipcode:''},\r\n\r\n            searchError: {},\r\n            adresses:[],\r\n        };\r\n    }\r\n\r\n    onSubmit=(evt)=>{\r\n\r\n        const adresses = [...this.state.adresses];\r\n        const field = this.state.fiels\r\n        const fieldError = this.validate(field);\r\n        this.setState({searchError:fieldError});\r\n        evt.preventDefault();\r\n\r\n        if(Object.keys(fieldError).length) return;\r\n\r\n//Here I set the state for the input.\r\n        this.setState({\r\n            fields:adresses.concat(field),\r\n            fiels :{\r\n                adress:field.adress,\r\n                zipcode:field.zipcode,\r\n\r\n            }\r\n        });\r\n  console.log(this.state.fiels)\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n//Validates if there is an input\r\n    validate=(fiels)=>{\r\n        const errors={};\r\n        if(!fiels.adress) errors.adress = \"Adress required\";\r\n        if(!fiels.zipcode) errors.zipcode =\"Zipcode required\";\r\n\r\n        return errors;\r\n\r\n    };\r\n\r\n    //This function updates every time a key have been stroke\r\n    onInputChange = (event) => {\r\n\r\n        const field = this.state.fiels;\r\n        field[event.target.name] = event.target.value;\r\n        this.setState({user: field});\r\n        console.log('Handle change' +event.target.name);\r\n        console.log('Handle change' +this.state.fiels.adress);\r\n        console.log('Handle change' +this.state.fiels.zipcode);\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input\r\n                        name=\"adress\"\r\n                        placeholder=\"Adresse\"\r\n                        value={this.state.adress}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n                    <span style={{color:'red'}}>{this.state.searchError.adress}</span>\r\n                    <br/>\r\n                    <input\r\n                        name=\"zipcode\"\r\n                        placeholder=\"post nr\"\r\n                        value={this.state.zipcode}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n                    <span style={{color:'red'}}>{this.state.searchError.zipcode}</span>\r\n                    <br/>\r\n\r\n\r\n                    <Link to ={{//Linking to search results\r\n                        pathname: \"/searchResults\",\r\n                        state:{\r\n                            name: \"Hello\"\r\n                        }\r\n                    }} >\r\n                        <input type=\"submit\"/>\r\n                    </Link>\r\n                </form>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\nexport default SearchInstitution","import {decorate, observable} from \"mobx\";\r\nconst baseUrl = process.env.NODE_ENV === 'development' ?  \"http://localhost:8080/\":\"\"; //Check if dev\r\n\r\n\r\n\r\nconst Loginstates = {LOGGING_IN:\"Loading\", LOGGEDOUT:\"Logout\", LOGGED_IN:\"LoggedIn\"};\r\n\r\nexport class TokenStore {\r\n    state = Loginstates.LOGGEDOUT;\r\n    token = null;\r\n    logindata = {username:\"\",password:\"\"};\r\n\r\n    constructor() {\r\n        this.token = localStorage.getItem(\"girafToken\")\r\n        //Validate if token is still good and keep/discard token and set state\r\n    }\r\n\r\n    doLogin() {\r\n        this.state=Loginstates.LOGGING_IN;\r\n        fetch(baseUrl + \"rest/login\",{\r\n            method:\"POST\",\r\n            body:JSON.stringify(this.logindata),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(\r\n            (response)=> {\r\n                response.text().then(\r\n                    (token)=> {\r\n                        console.log(\"Got Token: \" + token);\r\n                        this.token=token;\r\n                        localStorage.setItem(\"girafToken\",token);\r\n                        this.state=Loginstates.LOGGED_IN;}\r\n\r\n                )}\r\n        ).catch(()=>this.state = Loginstates.LOGGEDOUT )\r\n    }\r\n}\r\n\r\n\r\ndecorate(TokenStore,{\r\n    state: observable,\r\n    token: observable,\r\n    logindata:observable\r\n\r\n});\r\n\r\nexport const tokenStore = new TokenStore();","\r\nimport {decorate, observable} from \"mobx\";\r\nimport {TokenStore} from \"./TokenStore\";\r\nconst baseUrl = process.env.NODE_ENV === 'development' ?  \"http://localhost:8080/\":\"\"; //Check if dev\r\n\r\nconst states = {LOADING:\"LOAD\", DONE:\"DONE\", FAILED:\"FAILED\"}\r\n\r\n\r\nexport default class InstitutionsStore{\r\nstate = states.DONE;\r\n\r\n    vuggestuer = [];\r\n\r\n\r\n\r\n    constructor() {\r\n        //Loading data when it when the store is initialized.\r\n        this.fetchItem();\r\n    }\r\n\r\n\r\n//The fetchcall\r\n    fetchItem (){\r\n        const token = TokenStore.token;\r\n        //{headers:{\"authorization\":localStorage.getItem((\"jwt-token\"))}}\r\n        //todo: the fetch statment is parsing the header in a wrong way.\r\n        this.state = states.LOADING;\r\n        console.log(\"the header passed from store:\"+{headers:{Authorization: localStorage.getItem((\"portal-jwt-Token\"))}});\r\n        fetch(baseUrl + \"rest/institution/all\",{\r\n            headers:{\r\n                \"Authorization\": localStorage.getItem((\"portal-jwt-Token\"))\r\n            }\r\n        }).then((response)=> {\r\n                console.log(response);\r\n                response.json().then((json)=> {\r\n                    this.test = json;\r\n                    console.log(this.test)\r\n                    this.vuggestuer = json;\r\n                    this.state = states.DONE;\r\n                })\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n                this.state = states.FAILED;\r\n            });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ndecorate(InstitutionsStore,{\r\n    vuggestuer:observable,\r\n\r\n});\r\n\r\nexport const institution = new InstitutionsStore();","import React from 'react'\r\nimport {institution} from '../../stores/InstitutionsStore'\r\n\r\n\r\n//Adding itmes to the list.\r\nconst List = ({ list }) => (\r\n    <ul>\r\n        {list.map((item,key) => (\r\n            <ListItem key={key} item={item} />\r\n        ))}\r\n    </ul>\r\n);\r\n\r\n//Designing the table\r\nconst ListItem = ({ item }) => (\r\n   <div>\r\n    <td>\r\n    <tr>\r\n        <div>{item.navn}</div>\r\n    </tr>\r\n   </td>\r\n\r\n\r\n       <td>\r\n           <tr>\r\n               <div>\r\n                   {\r\n                   (typeof(item.indstsers)==\"object\"?\r\n                       <div>\r\n                           {\r\n                               item.tilsynsPath.map((indsats,j)=>(\r\n                                   <div>\r\n\r\n                                           <a href={item.link[j]}>{item.tilsynsPath[j]}</a>\r\n\r\n\r\n                                       )}\r\n\r\n\r\n                                   </div>\r\n                               ))\r\n\r\n                           }\r\n\r\n                       </div>\r\n                           :\r\n                       null)\r\n                   }\r\n\r\n               </div>\r\n           </tr>\r\n       </td>\r\n\r\n\r\n\r\n       <td>\r\n           <tr>\r\n               <div> venteliste {item.venteliste}</div>\r\n           </tr>\r\n       </td>\r\n   </div>\r\n\r\n\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass InstitutionView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n            this.state= {\r\n                user: '',\r\n                loading: ''\r\n            }\r\n    console.log(props.location.state)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        //debugger\r\n        return(\r\n        <div>\r\n\r\n            <ul>\r\n                <p>{institution.state}</p>\r\n                <List list={institution.vuggestuer}/>\r\n                <br/>\r\n            </ul>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InstitutionView","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction LandingPage(){\r\n\r\n    return(\r\n        <div>\r\n            <h1>This is the landingPage</h1>\r\n\r\n            <Link to ={{//Linking to search results\r\n                pathname: \"/search\",\r\n\r\n            }} >\r\n                <Button> Se Tilsyn </Button>\r\n            </Link>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default LandingPage","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\n\r\nclass NavBar extends React.Component {\r\n\r\n\r\n    render(){\r\n        return (\r\n        <div>\r\n            <Navbar bg=\"light\" expand=\"lg\" >\r\n                <Navbar.Brand href={\"#/\"}>Tilsyn.dk</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                        <Nav.Link href=\"https://www.kk.dk/indhold/s%C3%B8g-og-skriv-dit-barn-op-til-vuggestue-og-dagpleje\">Opskrivning til vuggestue</Nav.Link>\r\n\r\n                        <Nav.Link href=\"#login\">Log Ind</Nav.Link>\r\n                        <Nav.Link href=\"#register\">Registrer dig</Nav.Link>\r\n\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default NavBar","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport {observer} from \"mobx-react\";\r\nimport LogIn from \"./comtainer/Costumer/LogIn\";\r\nimport Register from \"./comtainer/Costumer/Register\"\r\nimport {HashRouter as Router, Route} from \"react-router-dom\";\r\nimport SearchInstitution from \"./comtainer/Costumer/SearchInstitution\"\r\n\r\nimport {Switch} from \"react-router-dom\"\r\nimport Container from \"react-bootstrap/Container\";\r\nimport institutionView from \"./comtainer/Costumer/InstitutionView\"\r\nimport LandingPage from \"./comtainer/LandingPage\"\r\nimport Navbar from \"./comtainer/Utility/NavBar\";\r\n\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n\r\nrender()\r\n    {\r\n        return (\r\n\r\n\r\n\r\n\r\n            <Container>\r\n                <Navbar/>\r\n\r\n\r\n\r\n\r\n\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path={\"/\"} component={LandingPage}/>\r\n                        <Route path={\"/register\"} component={Register}/>\r\n                        <Route path={\"/login\"} component={LogIn}/>\r\n                        <Route path={\"/search\"} component={SearchInstitution}/>\r\n                        <Route path={\"/searchResults\"} component={institutionView}/>\r\n                    </Switch>\r\n                </Router>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst token = getParameterByName(\"token\");\r\nif (token!=null && token.length>0){\r\n    //Store token and redirect to baseURL\r\n    localStorage.setItem(\"portal-jwt-Token\",token);\r\n    console.log(\"portal-jwt-Token from local storage: \"+localStorage.getItem(\"portal-jwt-Token\"));\r\n    window.location.replace(\"/\");\r\n    //todo: make sure this not null\r\n}\r\nconsole.log(\"token: \"+token);\r\n\r\n\r\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\nfunction getParameterByName(name, url) {\r\n    if (!url) url = window.location.href;\r\n    //name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n}"],"sourceRoot":""}